---
import Card from "./Card.astro";

interface Props {
  pricing: {
    minPrice: number;
    maxPrice: number;
    currency: string;
    commissionPercentage: number;
  };
  dimensions: {
    minAreaM2: number;
    maxAreaM2: number;
  };
  features: {
    bedrooms: number;
    bathrooms: number;
    parkingSpaces: number;
    isFurnished: boolean;
  };
  delivery: {
    type: string;
    yearBuilt: number;
  };
  description: string;
}

const { pricing, dimensions, features, delivery, description } = Astro.props;

// Format currency based on the currency type
const formatPrice = (price: number, currency: string) => {
  if (currency === "MXN") {
    return `$${(price / 1000000).toFixed(1)}M`;
  }
  return `${(price / 1000000).toFixed(1)}M`;
};

// Convert data to display format
const propertyData = {
  startingPrice: formatPrice(pricing.minPrice, pricing.currency),
  priceUnit: `Precio inicial (${pricing.currency})`,
  startingArea: dimensions.minAreaM2.toString(),
  areaUnit: "Área inicial (m²)",
  handover:
    delivery.type === "inmediata" ? "Inmediata" : delivery.yearBuilt.toString(),
  handoverUnit: "Entrega",
  floors: "N/A", // This data is not in mockup.json, could be added
  floorsUnit: "Pisos",
  bedrooms: features.bedrooms.toString(),
  bedroomsUnit: "Recámaras",
  paymentPlan: `${pricing.commissionPercentage}% / Resto`,
  paymentUnit: "Plan de Pago",
};
---

<section class="bg-grey-light py-16">
  <div class="container mx-auto px-4">
    <!-- Property Details Cards Grid -->
    <div class="grid grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
      <Card title={propertyData.priceUnit} value={propertyData.startingPrice} />
      <Card title={propertyData.areaUnit} value={propertyData.startingArea} />
      <Card title={propertyData.handoverUnit} value={propertyData.handover} />
      <Card title={propertyData.floorsUnit} value={propertyData.floors} />
      <Card title={propertyData.bedroomsUnit} value={propertyData.bedrooms} />
      <Card title={propertyData.paymentUnit} value={propertyData.paymentPlan} />
    </div>

    <!-- Property Description -->
    <div class="max-w-4xl mx-auto">
      <p
        class="text-black text-lg md:text-xl font-regular leading-relaxed mb-8"
      >
        {description}
      </p>

      <!-- CTA Button -->
      <div class="text-center">
        <button
          class="inline-flex items-center justify-between bg-transparent border-2 border-orange text-orange px-8 py-4 rounded-full text-lg font-regular hover:bg-orange hover:text-white transition-all duration-300 min-w-[280px]"
        >
          <span>Hacer una consulta</span>
          <svg
            class="w-5 h-5 ml-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>
